[versions]
springBoot = "3.5.5"
springDm = "1.1.7"
mapstruct = "1.6.3"
mapstructExtension = "1.1.3"
jjwt = "0.12.6"
springdoc = "2.8.9"
therapi = "0.15.0"
poi = "5.4.1"
caffeine = "3.2.2"
jetbrainAnnotation = "26.0.2"
commonLangs = "3.18.0"
javapoet = "0.7.0"
sentry = "5.9.0"
lombokMapstructBinding = "0.2.0"

[libraries]
spring-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-mail = { module = "org.springframework.boot:spring-boot-starter-mail" }
spring-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-cloud-circuitbreaker-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }
spring-cloud-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway-server-webmvc" }
spring-cloud-loadbalancer = { module = "org.springframework.cloud:spring-cloud-starter-loadbalancer" }
spring-cloud-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client" }
spring-cloud-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server" }
spring-cloud-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-circuitbreaker-retry = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-spring-retry" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }
spring-devtool = { module = "org.springframework.boot:spring-boot-devtools" }
spring-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
postgres = { module = "org.postgresql:postgresql" }
lombok = { module = "org.projectlombok:lombok" }
lombok-binding-mapstruct = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "lombokMapstructBinding" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mapstruct-extension = { module = "org.mapstruct.extensions.spring:mapstruct-spring-annotations", version.ref = "mapstructExtension" }
mapstruct-extension-processor = { module = "org.mapstruct.extensions.spring:mapstruct-spring-extensions", version.ref = "mapstructExtension" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
swagger = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
therapi-javadoc = { module = "com.github.therapi:therapi-runtime-javadoc", version.ref = "therapi" }
therapi-javadoc-processor = { module = "com.github.therapi:therapi-runtime-javadoc-scribe", version.ref = "therapi" }
poi = { module = "org.apache.poi:poi", version.ref = "poi" }
poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "poi" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
jetbrains-annotation = { module = "org.jetbrains:annotations", version.ref = "jetbrainAnnotation" }
apache-common-langs = { module = "org.apache.commons:commons-lang3", version.ref = "commonLangs" }
javapoet = { module = "com.palantir.javapoet:javapoet", version.ref = "javapoet" }

[plugins]
spring-application = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDm" }
sentry = { id = "io.sentry.jvm.gradle", version.ref = "sentry" }